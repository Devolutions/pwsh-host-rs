function(yarc_bundle)
	cmake_parse_arguments(YARC_BUNDLE "" "NAME;TARGET;OUTPUT" "RESOURCES" ${ARGN})
	if(NOT YARC_BUNDLE_TARGET)
		set(YARC_BUNDLE_TARGET "yarc-${YARC_BUNDLE_NAME}-bundle")
	endif()
	if(YARC_BUNDLE_VERBOSE)
		list(APPEND YARC_OPTIONS "-Verbose")
	endif()
	if(YARC_BUNDLE_NAME)
		list(APPEND YARC_OPTIONS "-SymbolName;${YARC_BUNDLE_NAME}")
	endif()
	if(YARC_BUNDLE_OUTPUT)
		list(APPEND YARC_OPTIONS "-OutputFile;${YARC_BUNDLE_OUTPUT}")
	endif()
	foreach(YARC_BUNDLE_RESOURCE ${YARC_BUNDLE_RESOURCES})
		set(YARC_BUNDLE_RESOURCE_ABS "${YARC_BUNDLE_RESOURCE}")
		if(NOT IS_ABSOLUTE ${YARC_BUNDLE_RESOURCE})
			set(YARC_BUNDLE_RESOURCE_ABS "${CMAKE_CURRENT_SOURCE_DIR}/${YARC_BUNDLE_RESOURCE}")
		endif()
		file(RELATIVE_PATH YARC_BUNDLE_RESOURCE_REL "${CMAKE_CURRENT_BINARY_DIR}" "${YARC_BUNDLE_RESOURCE_ABS}")
		list(APPEND YARC_BUNDLE_RESOURCES_ABS ${YARC_BUNDLE_RESOURCE_ABS})
		list(APPEND YARC_BUNDLE_RESOURCES_REL ${YARC_BUNDLE_RESOURCE_REL})
	endforeach()
    set(YARC_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/yarc.ps1")
    set(PWSH_OPTIONS "-ExecutionPolicy;Unrestricted;-NoLogo")
	add_custom_command(COMMAND pwsh
		ARGS ${PWSH_OPTIONS} ${YARC_PATH} ${YARC_OPTIONS} -InputFile ${YARC_BUNDLE_RESOURCES_REL}
		OUTPUT ${YARC_BUNDLE_OUTPUT}
		DEPENDS ${YARC_BUNDLE_RESOURCES})
endfunction()